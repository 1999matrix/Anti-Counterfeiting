{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\components\\\\GetContract.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetContract = _ref => {\n  _s();\n  let {\n    account,\n    central\n  } = _ref;\n  const [contractAddress, setContractAddress] = useState('');\n  const [walletAddress, setWalletAddress] = useState('');\n  function showErrorMessage(error) {\n    alert(`An error occurred while connecting to MetaMask: ${error.message}`);\n  }\n  const handleInput1Change = e => {\n    setWalletAddress(e.target.value);\n  };\n  const fetchContractAddress = async () => {\n    try {\n      if (central && walletAddress) {\n        const address = await central.getCompanySmartContractAddress(walletAddress);\n        setContractAddress(address);\n      } else {\n        throw new Error('Central contract or wallet address is not available');\n      }\n    } catch (error) {\n      console.log(error);\n      showErrorMessage(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GetContract\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Component__title\",\n      children: \"Fetch Associated Contract Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Component__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          children: \"Enter Company wallet address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form__input\",\n          value: walletAddress,\n          onChange: handleInput1Change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button__toggle form__button\",\n        onClick: fetchContractAddress,\n        children: \"Fetch Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), contractAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result: \", contractAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GetContract, \"IKSzB+TULwoASnrnGljvZNVfAt0=\");\n_c = GetContract;\nexport default GetContract;\nvar _c;\n$RefreshReg$(_c, \"GetContract\");","map":{"version":3,"names":["useState","GetContract","account","central","contractAddress","setContractAddress","walletAddress","setWalletAddress","showErrorMessage","error","alert","message","handleInput1Change","e","target","value","fetchContractAddress","address","getCompanySmartContractAddress","Error","console","log"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/components/GetContract.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst GetContract = ({ account, central }) => {\r\n  const [contractAddress, setContractAddress] = useState('');\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n\r\n  function showErrorMessage(error) {\r\n    alert(`An error occurred while connecting to MetaMask: ${error.message}`);\r\n  }\r\n\r\n  const handleInput1Change = (e) => {\r\n    setWalletAddress(e.target.value);\r\n  };\r\n\r\n  const fetchContractAddress = async () => {\r\n    try {\r\n      if (central && walletAddress) {\r\n        const address = await central.getCompanySmartContractAddress(walletAddress);\r\n        setContractAddress(address);\r\n      } else {\r\n        throw new Error('Central contract or wallet address is not available');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      showErrorMessage(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='GetContract'>\r\n      <h3 className='Component__title'>Fetch Associated Contract Address</h3>\r\n      <div className='Component__form'>\r\n        <div className='form__content'>\r\n          <label className='form__label'>Enter Company wallet address</label>\r\n          <input type=\"text\" className='form__input' value={walletAddress} onChange={handleInput1Change} />\r\n        </div>\r\n        <button className='button__toggle form__button' onClick={fetchContractAddress}>Fetch Address</button>\r\n        {contractAddress && <p>Result: {contractAddress}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetContract;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,WAAW,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAQ,CAAC;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,SAASQ,gBAAgB,CAACC,KAAK,EAAE;IAC/BC,KAAK,CAAE,mDAAkDD,KAAK,CAACE,OAAQ,EAAC,CAAC;EAC3E;EAEA,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChCN,gBAAgB,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,oBAAoB,GAAG,YAAY;IACvC,IAAI;MACF,IAAIb,OAAO,IAAIG,aAAa,EAAE;QAC5B,MAAMW,OAAO,GAAG,MAAMd,OAAO,CAACe,8BAA8B,CAACZ,aAAa,CAAC;QAC3ED,kBAAkB,CAACY,OAAO,CAAC;MAC7B,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,qDAAqD,CAAC;MACxE;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdW,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MAClBD,gBAAgB,CAACC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAAC;IAAiC;MAAA;MAAA;MAAA;IAAA,QAAK,eACvE;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UAAO,SAAS,EAAC,aAAa;UAAA,UAAC;QAA4B;UAAA;UAAA;UAAA;QAAA,QAAQ,eACnE;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,aAAa;UAAC,KAAK,EAAEH,aAAc;UAAC,QAAQ,EAAEM;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7F,eACN;QAAQ,SAAS,EAAC,6BAA6B;QAAC,OAAO,EAAEI,oBAAqB;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS,EACpGZ,eAAe,iBAAI;QAAA,WAAG,UAAQ,EAACA,eAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAvCIH,WAAW;AAAA,KAAXA,WAAW;AAyCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}