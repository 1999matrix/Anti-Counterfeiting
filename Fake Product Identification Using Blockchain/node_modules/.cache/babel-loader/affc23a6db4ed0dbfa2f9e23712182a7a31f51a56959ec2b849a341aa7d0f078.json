{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport GetContract from './components/GetContract';\nimport CentralABI from './abis/Cental_ABI.json';\nimport config from './config.json';\n\n// Other components\nimport Home from './components/Home';\nimport AddProduct from './components/AddProduct';\nimport VerifyProduct from './components/VerifyProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [central, setCentral] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const connectWallet = async () => {\n    try {\n      if (window.ethereum) {\n        // Request account access from the user\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await newProvider.getSigner();\n\n        // Set the provider\n        setProvider(newProvider);\n\n        // Get the user's accounts\n        const accounts = await newProvider.listAccounts();\n        setAccount(accounts[0]);\n\n        // Set loading to false\n        setLoading(false);\n      } else {\n        throw new Error('MetaMask not found. Please install MetaMask.');\n      }\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    connectWallet();\n  }, []); // Connect to the wallet on component mount\n\n  useEffect(() => {\n    // This useEffect is triggered when the provider state is updated\n    const initializeCentralContract = async () => {\n      if (provider) {\n        try {\n          const network = await provider.getNetwork();\n\n          // Create the central contract instance\n          const centralContract = new ethers.Contract(config[network.chainId].central.address, CentralABI, provider.getSigner());\n\n          // Set the central contract instance\n          setCentral(centralContract);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    };\n    initializeCentralContract();\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/getcontract\",\n          element: /*#__PURE__*/_jsxDEV(GetContract, {\n            account: account,\n            central: central\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/addproduct\",\n          element: /*#__PURE__*/_jsxDEV(AddProduct, {\n            account: account,\n            central: central\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/verify\",\n          element: /*#__PURE__*/_jsxDEV(VerifyProduct, {\n            account: account,\n            central: central\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w81iM3o+h2OcX0876uEWUjkkWoY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","BrowserRouter","Router","Route","Routes","GetContract","CentralABI","config","Home","AddProduct","VerifyProduct","App","provider","setProvider","central","setCentral","account","setAccount","loading","setLoading","connectWallet","window","ethereum","request","method","newProvider","providers","Web3Provider","signer","getSigner","accounts","listAccounts","Error","error","console","initializeCentralContract","network","getNetwork","centralContract","Contract","chainId","address"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport GetContract from './components/GetContract';\r\nimport CentralABI from './abis/Cental_ABI.json';\r\nimport config from './config.json';\r\n\r\n// Other components\r\nimport Home from './components/Home';\r\nimport AddProduct from './components/AddProduct';\r\nimport VerifyProduct from './components/VerifyProduct';\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [central, setCentral] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (window.ethereum) {\r\n        // Request account access from the user\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = await newProvider.getSigner();\r\n\r\n        // Set the provider\r\n        setProvider(newProvider);\r\n\r\n        // Get the user's accounts\r\n        const accounts = await newProvider.listAccounts();\r\n        setAccount(accounts[0]);\r\n\r\n        // Set loading to false\r\n        setLoading(false);\r\n      } else {\r\n        throw new Error('MetaMask not found. Please install MetaMask.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n  }, []); // Connect to the wallet on component mount\r\n\r\n  useEffect(() => {\r\n    // This useEffect is triggered when the provider state is updated\r\n    const initializeCentralContract = async () => {\r\n      if (provider) {\r\n        try {\r\n          const network = await provider.getNetwork();\r\n\r\n          // Create the central contract instance\r\n          const centralContract = new ethers.Contract(\r\n            config[network.chainId].central.address,\r\n            CentralABI,\r\n            provider.getSigner()\r\n          );\r\n\r\n          // Set the central contract instance\r\n          setCentral(centralContract);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeCentralContract();\r\n  }, [provider]);\r\n\r\n  return (\r\n    <Router>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/getcontract\" element={<GetContract account={account} central={central} />} />\r\n            <Route path=\"/addproduct\" element={<AddProduct account={account} central={central} />} />\r\n            <Route path=\"/verify\" element={<VerifyProduct account={account} central={central} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}