{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\components\\\\Navigation.js\";\nimport { ethers } from 'ethers';\nimport './app.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navigation = _ref => {\n  let {\n    account,\n    setAccount\n  } = _ref;\n  function showErrorMessage(error) {\n    alert(`An error occurred while connecting to MetaMask: ${error.message}`);\n  }\n  const connectHandler = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    } catch (error) {\n      console.log(error);\n      showErrorMessage(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav container\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      className: \"nav__logo\",\n      children: \"Product Verifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav__menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav__list grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav__item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav__link\",\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav__item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav__link\",\n            to: \"createcontract\",\n            children: \"CreateContract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav__item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav__link\",\n            to: \"addproduct\",\n            children: \"AddProducts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav__item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav__link\",\n            to: \"verify\",\n            children: \"VerifyProduct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: account ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button__toggle\",\n              children: account.slice(0, 6) + '...' + account.slice(38, 42)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button__toggle\",\n            onClick: connectHandler,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["ethers","Link","Navigation","account","setAccount","showErrorMessage","error","alert","message","connectHandler","accounts","window","ethereum","request","method","utils","getAddress","console","log","slice"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/components/Navigation.js"],"sourcesContent":["import { ethers } from 'ethers'\r\nimport './app.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Navigation = ({ account, setAccount }) => {\r\n\r\n    function showErrorMessage(error) {\r\n        alert(`An error occurred while connecting to MetaMask: ${error.message}`);\r\n      }\r\n      \r\n    \r\n    const connectHandler = async () => {\r\n        try{\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const account = ethers.utils.getAddress(accounts[0])\r\n            setAccount(account);\r\n        }catch(error){\r\n            console.log(error);\r\n            showErrorMessage(error)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <nav className='nav container'>\r\n            <a href=\"/\" className=\"nav__logo\">Product Verifier</a>\r\n            <div className='nav__menu'>\r\n                <ul className='nav__list grid'>\r\n                    <li className='nav__item'>\r\n                        <Link className='nav__link' to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className='nav__item'>\r\n                        <Link className='nav__link' to=\"createcontract\">CreateContract</Link>\r\n                    </li>\r\n                    {/* <li className='nav__item'>\r\n                        <Link className='nav__link' to=\"getcontract\">FetchAddress</Link>\r\n                    </li> */}\r\n                    <li className='nav__item'>\r\n                        <Link className='nav__link' to=\"addproduct\">AddProducts</Link>\r\n                    </li>\r\n                    <li className='nav__item'>\r\n                        <Link className='nav__link' to=\"verify\">VerifyProduct</Link>\r\n                    </li>\r\n                    <li>\r\n                        {account ? (\r\n                            <>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className='button__toggle'\r\n                                >\r\n                                    {account.slice(0, 6) + '...' + account.slice(38, 42)}\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className='button__toggle'\r\n                                    onClick={connectHandler}\r\n                                >\r\n                                    Connect\r\n                                </button>\r\n                        )\r\n                      }\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;"],"mappings":";AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAClB,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAAA;AAGxC,MAAMC,UAAU,GAAG,QAA6B;EAAA,IAA5B;IAAEC,OAAO;IAAEC;EAAW,CAAC;EAEvC,SAASC,gBAAgB,CAACC,KAAK,EAAE;IAC7BC,KAAK,CAAE,mDAAkDD,KAAK,CAACE,OAAQ,EAAC,CAAC;EAC3E;EAGF,MAAMC,cAAc,GAAG,YAAY;IAC/B,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjF,MAAMX,OAAO,GAAGH,MAAM,CAACe,KAAK,CAACC,UAAU,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpDN,UAAU,CAACD,OAAO,CAAC;IACvB,CAAC,QAAMG,KAAK,EAAC;MACTW,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MAClBD,gBAAgB,CAACC,KAAK,CAAC;IAC3B;EAEJ,CAAC;EAID,oBACI;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC1B;MAAG,IAAI,EAAC,GAAG;MAAC,SAAS,EAAC,WAAW;MAAA,UAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAI,eACtD;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB;QAAI,SAAS,EAAC,gBAAgB;QAAA,wBAC1B;UAAI,SAAS,EAAC,WAAW;UAAA,uBACrB,QAAC,IAAI;YAAC,SAAS,EAAC,WAAW;YAAC,EAAE,EAAC,GAAG;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAC7C,eACL;UAAI,SAAS,EAAC,WAAW;UAAA,uBACrB,QAAC,IAAI;YAAC,SAAS,EAAC,WAAW;YAAC,EAAE,EAAC,gBAAgB;YAAA,UAAC;UAAc;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QACpE,eAIL;UAAI,SAAS,EAAC,WAAW;UAAA,uBACrB,QAAC,IAAI;YAAC,SAAS,EAAC,WAAW;YAAC,EAAE,EAAC,YAAY;YAAA,UAAC;UAAW;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAC7D,eACL;UAAI,SAAS,EAAC,WAAW;UAAA,uBACrB,QAAC,IAAI;YAAC,SAAS,EAAC,WAAW;YAAC,EAAE,EAAC,QAAQ;YAAA,UAAC;UAAa;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAC3D,eACL;UAAA,UACKH,OAAO,gBACJ;YAAA,uBACI;cACI,IAAI,EAAC,QAAQ;cACb,SAAS,EAAC,gBAAgB;cAAA,UAEzBA,OAAO,CAACgB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGhB,OAAO,CAACgB,KAAK,CAAC,EAAE,EAAE,EAAE;YAAC;cAAA;cAAA;cAAA;YAAA;UAC/C,iBACV,gBAEC;YACI,IAAI,EAAC,QAAQ;YACb,SAAS,EAAC,gBAAgB;YAC1B,OAAO,EAAEV,cAAe;YAAA,UAC3B;UAED;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA,QAEA;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAlEKP,UAAU;AAoEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}