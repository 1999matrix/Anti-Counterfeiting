{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport VerifyProduct from './components/VerifyProduct';\nimport AddProduct from './components/AddProduct';\nimport GetContract from './components/GetContract';\nimport DeployContract from './components/DeployContract';\n\n// ABIs\nimport CentralABI from './abis/Cental_ABI.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [central, setCentral] = useState(null);\n  const [account, setAccount] = useState(null);\n  function showErrorMessage(error) {\n    alert(`An error occurred while connecting to MetaMask: ${error.message}\\nCheck if you have MetaMask wallet installed`);\n  }\n  const loadBlockchainData = async () => {\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        setProvider(provider);\n        const network = await provider.getNetwork();\n        const centralContractAddress = config[network.chainId].central.address;\n        const central = new ethers.Contract(centralContractAddress, CentralABI, signer);\n        setCentral(central);\n        const accounts = await provider.listAccounts();\n        setAccount(accounts[0]); // Assuming you want to set the first account\n      } else {\n        showErrorMessage(new Error('MetaMask not found. Please install MetaMask.'));\n      }\n    } catch (error) {\n      console.error(error);\n      showErrorMessage(error);\n    }\n  };\n  useEffect(() => {\n    loadBlockchainData();\n\n    // Listen for provider changes (account changes, network changes)\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', () => {\n        // Handle account changes\n        loadBlockchainData();\n      });\n      window.ethereum.on('chainChanged', () => {\n        // Handle network changes\n        loadBlockchainData();\n      });\n    }\n\n    // Cleanup the event listeners when the component unmounts\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners('accountsChanged');\n        window.ethereum.removeAllListeners('chainChanged');\n      }\n    };\n  }, []);\n  const handleCreateSmartContract = async () => {\n    try {\n      if (central) {\n        // Check if central is not null or undefined\n        const result = await central.createSmartContract( /*...*/);\n        // Do something with the result\n      } else {\n        // Handle the case where central is null\n        console.error(\"Central contract is not initialized.\");\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle the error appropriately\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      provider: provider,\n      central: central,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/createcontract\",\n        element: /*#__PURE__*/_jsxDEV(DeployContract, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/getcontract\",\n        element: /*#__PURE__*/_jsxDEV(GetContract, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addproduct\",\n        element: /*#__PURE__*/_jsxDEV(AddProduct, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify\",\n        element: /*#__PURE__*/_jsxDEV(VerifyProduct, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eY3Q41ExlikQ/WGqk9yQxGRXD9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","BrowserRouter","Router","Route","Routes","Navigation","Home","VerifyProduct","AddProduct","GetContract","DeployContract","CentralABI","config","App","provider","setProvider","central","setCentral","account","setAccount","showErrorMessage","error","alert","message","loadBlockchainData","window","ethereum","providers","Web3Provider","signer","getSigner","network","getNetwork","centralContractAddress","chainId","address","Contract","accounts","listAccounts","Error","console","on","removeAllListeners","handleCreateSmartContract","result","createSmartContract"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\n// Components\r\nimport Navigation from './components/Navigation';\r\nimport Home from './components/Home';\r\nimport VerifyProduct from './components/VerifyProduct';\r\nimport AddProduct from './components/AddProduct';\r\nimport GetContract from './components/GetContract';\r\nimport DeployContract from './components/DeployContract';\r\n\r\n// ABIs\r\nimport CentralABI from './abis/Cental_ABI.json';\r\n\r\n// Config\r\nimport config from './config.json';\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [central, setCentral] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n\r\n  function showErrorMessage(error) {\r\n    alert(`An error occurred while connecting to MetaMask: ${error.message}\\nCheck if you have MetaMask wallet installed`);\r\n  }\r\n\r\n  const loadBlockchainData = async () => {\r\n    try {\r\n      if (window.ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = await provider.getSigner();\r\n        setProvider(provider);\r\n        const network = await provider.getNetwork();\r\n\r\n        const centralContractAddress = config[network.chainId].central.address;\r\n        const central = new ethers.Contract(centralContractAddress, CentralABI, signer);\r\n        setCentral(central);\r\n\r\n        const accounts = await provider.listAccounts();\r\n        setAccount(accounts[0]); // Assuming you want to set the first account\r\n\r\n      } else {\r\n        showErrorMessage(new Error('MetaMask not found. Please install MetaMask.'));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      showErrorMessage(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadBlockchainData();\r\n\r\n    // Listen for provider changes (account changes, network changes)\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', () => {\r\n        // Handle account changes\r\n        loadBlockchainData();\r\n      });\r\n\r\n      window.ethereum.on('chainChanged', () => {\r\n        // Handle network changes\r\n        loadBlockchainData();\r\n      });\r\n    }\r\n\r\n    // Cleanup the event listeners when the component unmounts\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeAllListeners('accountsChanged');\r\n        window.ethereum.removeAllListeners('chainChanged');\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleCreateSmartContract = async () => {\r\n    try {\r\n      if (central) {\r\n        // Check if central is not null or undefined\r\n        const result = await central.createSmartContract(/*...*/);\r\n        // Do something with the result\r\n      } else {\r\n        // Handle the case where central is null\r\n        console.error(\"Central contract is not initialized.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle the error appropriately\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation account={account} provider={provider} central={central} setAccount={setAccount} />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/createcontract\" element={<DeployContract account={account} provider={provider} central={central} />} />\r\n        <Route path=\"/getcontract\" element={<GetContract account={account} provider={provider} central={central} />} />\r\n        <Route path=\"/addproduct\" element={<AddProduct account={account} provider={provider} central={central} />} />\r\n        <Route path=\"/verify\" element={<VerifyProduct account={account} provider={provider} central={central} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}