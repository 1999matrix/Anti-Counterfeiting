{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport VerifyProduct from './components/VerifyProduct';\nimport AddProduct from './components/AddProduct';\nimport GetContract from './components/GetContract';\n\n// ABIs\nimport CentralABI from './abis/Cental_ABI.json';\n\n// Config\nimport config from './config.json';\nimport DeployContract from './components/DeployContract';\n\n// const Home = () => <div>Home Page</div>;\n// const About = () => <div>About Page</div>;\n// const Contact = () => <div>Contact Page</div>;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [central, setCentral] = useState(null);\n  const [account, setAccount] = useState(null);\n  function showErrorMessage(error) {\n    alert(`An error occurred while connecting to MetaMask: ${error.message}  '\\n'  'Check if you have metamask wallet installed'`);\n  }\n  const connectWallet = async () => {\n    try {\n      if (window.ethereum) {\n        // Request account access from the user\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await newProvider.getSigner();\n\n        // Set the provider and signer\n        setProvider(newProvider);\n        const network = await newProvider.getNetwork();\n\n        // Create the central contract instance\n        const centralContract = new ethers.Contract(config[network.chainId].central.address, CentralABI, signer);\n\n        // Set the central contract instance\n        setCentral(centralContract);\n\n        // Get the user's accounts\n        const accounts = await newProvider.listAccounts();\n        setAccount(accounts[0]);\n\n        // Set loading to false\n        // setLoading(false);\n      } else {\n        throw new Error('MetaMask not found. Please install MetaMask.');\n      }\n    } catch (error) {\n      console.error(error);\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    connectWallet();\n  }, []); // Connect to the wallet on component mount\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      provider: provider,\n      central: central,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/createcontract\",\n        element: /*#__PURE__*/_jsxDEV(DeployContract, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/getcontract\",\n        element: /*#__PURE__*/_jsxDEV(GetContract, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addproduct\",\n        element: /*#__PURE__*/_jsxDEV(AddProduct, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify\",\n        element: /*#__PURE__*/_jsxDEV(VerifyProduct, {\n          account: account,\n          provider: provider,\n          central: central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eY3Q41ExlikQ/WGqk9yQxGRXD9k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","BrowserRouter","Router","Route","Routes","Navigation","Home","VerifyProduct","AddProduct","GetContract","CentralABI","config","DeployContract","App","provider","setProvider","central","setCentral","account","setAccount","showErrorMessage","error","alert","message","connectWallet","window","ethereum","request","method","newProvider","providers","Web3Provider","signer","getSigner","network","getNetwork","centralContract","Contract","chainId","address","accounts","listAccounts","Error","console"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\n\r\n\r\n// Components\r\nimport Navigation from './components/Navigation';\r\nimport Home from './components/Home';\r\nimport VerifyProduct from './components/VerifyProduct';\r\nimport AddProduct from './components/AddProduct';\r\nimport GetContract from './components/GetContract'\r\n\r\n// ABIs\r\nimport CentralABI from './abis/Cental_ABI.json';\r\n\r\n// Config\r\nimport config from './config.json';\r\nimport DeployContract from './components/DeployContract';\r\n\r\n\r\n// const Home = () => <div>Home Page</div>;\r\n// const About = () => <div>About Page</div>;\r\n// const Contact = () => <div>Contact Page</div>;\r\n\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [central, setCentral] = useState(null);\r\n\r\n  const [account, setAccount] = useState(null);\r\n\r\n  function showErrorMessage(error) {\r\n    alert(`An error occurred while connecting to MetaMask: ${error.message}  '\\n'  'Check if you have metamask wallet installed'`);\r\n  }\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (window.ethereum) {\r\n        // Request account access from the user\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = await newProvider.getSigner();\r\n\r\n        // Set the provider and signer\r\n        setProvider(newProvider);\r\n\r\n        const network = await newProvider.getNetwork();\r\n\r\n        // Create the central contract instance\r\n        const centralContract = new ethers.Contract(\r\n          config[network.chainId].central.address,\r\n          CentralABI,\r\n          signer\r\n        );\r\n\r\n        // Set the central contract instance\r\n        setCentral(centralContract);\r\n\r\n        // Get the user's accounts\r\n        const accounts = await newProvider.listAccounts();\r\n        setAccount(accounts[0]);\r\n\r\n        // Set loading to false\r\n        // setLoading(false);\r\n      } else {\r\n        throw new Error('MetaMask not found. Please install MetaMask.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      // setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n  }, []); // Connect to the wallet on component mount\r\n\r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <Navigation account={account} provider={provider} central={central} setAccount={setAccount} />\r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={ <Home/> } />\r\n        <Route \r\n          path=\"/createcontract\" \r\n          element = {<DeployContract  account={account} provider={provider} central={central} />}\r\n        />\r\n        <Route \r\n          path=\"/getcontract\" \r\n          element = {<GetContract  account={account} provider={provider} central={central} />}\r\n        />\r\n        <Route \r\n          path=\"/addproduct\"  \r\n          element = {<AddProduct account={account} provider={provider} central={central} />}\r\n        />\r\n\r\n        <Route \r\n          path=\"/verify\" \r\n          element = {<VerifyProduct  account={account} provider={provider} central={central} />}\r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}