{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\components\\\\VerifyProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport jsQR from 'jsqr';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyProduct = _ref => {\n  _s();\n  let {\n    central\n  } = _ref;\n  const [companyContractAddress, setCompanyContractAddress] = useState('');\n  const [productId, setProductId] = useState('');\n  const [productStatus, setProductStatus] = useState(null);\n  const [data, setData] = useState(null);\n  const webcamRef = useRef(null);\n  const checkProduct = async () => {\n    try {\n      const result = await central.checkProduct(companyContractAddress, parseInt(productId));\n      setProductStatus(result);\n    } catch (error) {\n      console.log(error);\n      showErrorMessage(error);\n    }\n  };\n  const handleCapture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc) {\n      const imageData = new Image();\n      imageData.src = imageSrc;\n      imageData.onload = () => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = imageData.width;\n        canvas.height = imageData.height;\n        context.drawImage(imageData, 0, 0, imageData.width, imageData.height);\n        const imageDataContext = context.getImageData(0, 0, imageData.width, imageData.height);\n        const code = jsQR(imageDataContext.data, imageData.width, imageData.height);\n        if (code) {\n          let str = CryptoJS.AES.decrypt(code.data, 'key').toString(CryptoJS.enc.Utf8);\n          let lastIndex = str.lastIndexOf('?');\n          if (lastIndex !== -1) {\n            let beforeQuestionMark = str.slice(0, lastIndex);\n            let afterQuestionMark = str.slice(lastIndex + 1);\n            setCompanyContractAddress(beforeQuestionMark);\n            setProductId(afterQuestionMark);\n            setData(str);\n          } else {\n            setCompanyContractAddress('0xac16DF8e44D32090143927a2b4D594b9887f4A86');\n            setProductId('1999821');\n            setData('wrong');\n          }\n        } else {\n          setData('No QR code found');\n        }\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VerifyProduct\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"Component__title\",\n      children: \"Verify Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Component__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \" Scan Your QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(Webcam, {\n              audio: false,\n              ref: webcamRef,\n              screenshotFormat: \"image/jpeg\",\n              width: 400,\n              height: 300,\n              className: \"mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCapture,\n              className: \"btn btn-success\",\n              children: \"Capture QR Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: data && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small mt-5\",\n                children: [\"data: \", data]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button__toggle form__button\",\n        onClick: checkProduct,\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), productStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result: \", productStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyProduct, \"1OJdi2/ug2+dbPzwazeEqRdPmY8=\");\n_c = VerifyProduct;\nexport default VerifyProduct;\nvar _c;\n$RefreshReg$(_c, \"VerifyProduct\");","map":{"version":3,"names":["React","useState","useRef","Webcam","jsQR","CryptoJS","VerifyProduct","central","companyContractAddress","setCompanyContractAddress","productId","setProductId","productStatus","setProductStatus","data","setData","webcamRef","checkProduct","result","parseInt","error","console","log","showErrorMessage","handleCapture","imageSrc","current","getScreenshot","imageData","Image","src","onload","canvas","document","createElement","context","getContext","width","height","drawImage","imageDataContext","getImageData","code","str","AES","decrypt","toString","enc","Utf8","lastIndex","lastIndexOf","beforeQuestionMark","slice","afterQuestionMark"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/components/VerifyProduct.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport jsQR from 'jsqr';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst VerifyProduct = ({ central }) => {\r\n  const [companyContractAddress, setCompanyContractAddress] = useState('');\r\n  const [productId, setProductId] = useState('');\r\n  const [productStatus, setProductStatus] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  const webcamRef = useRef(null);\r\n\r\n  const checkProduct = async () => {\r\n    try{\r\n\r\n        const result = await central.checkProduct(companyContractAddress, parseInt(productId));\r\n        setProductStatus(result);\r\n    }catch(error){\r\n        console.log(error);\r\n        showErrorMessage(error);\r\n    }\r\n    \r\n}\r\n\r\n\r\n  const handleCapture = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    if (imageSrc) {\r\n      const imageData = new Image();\r\n      imageData.src = imageSrc;\r\n\r\n      imageData.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n\r\n        canvas.width = imageData.width;\r\n        canvas.height = imageData.height;\r\n        context.drawImage(imageData, 0, 0, imageData.width, imageData.height);\r\n\r\n        const imageDataContext = context.getImageData(0, 0, imageData.width, imageData.height);\r\n        const code = jsQR(imageDataContext.data, imageData.width, imageData.height);\r\n\r\n        if (code) {\r\n          let str = CryptoJS.AES.decrypt(code.data, 'key').toString(CryptoJS.enc.Utf8);\r\n          let lastIndex = str.lastIndexOf('?');\r\n\r\n          if (lastIndex !== -1) {\r\n            let beforeQuestionMark = str.slice(0, lastIndex);\r\n            let afterQuestionMark = str.slice(lastIndex + 1);\r\n\r\n            setCompanyContractAddress(beforeQuestionMark);\r\n            setProductId(afterQuestionMark);\r\n            setData(str);\r\n          } else {\r\n            setCompanyContractAddress('0xac16DF8e44D32090143927a2b4D594b9887f4A86');\r\n            setProductId('1999821');\r\n            setData('wrong');\r\n          }\r\n        } else {\r\n          setData('No QR code found');\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='VerifyProduct'>\r\n      <h3 className='Component__title'>Verify Product</h3>\r\n      <div className='Component__form'>\r\n        <div className='form__content'>\r\n          <h2 className='text-center mb-4'> Scan Your QR Code</h2>\r\n          <div className='card border-0'>\r\n            <div className='card-body'>\r\n              <Webcam\r\n                audio={false}\r\n                ref={webcamRef}\r\n                screenshotFormat='image/jpeg'\r\n                width={400}\r\n                height={300}\r\n                className='mb-2'\r\n              />\r\n              <button type='button' onClick={handleCapture} className='btn btn-success'>\r\n                Capture QR Code\r\n              </button>\r\n              <div className='mt-4'>{data && <p className='small mt-5'>data: {data}</p>}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button className='button__toggle form__button' onClick={checkProduct}>\r\n          Verify\r\n        </button>\r\n        {productStatus && <p>Result: {productStatus}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}