{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Fake-Product-Identification-Using-Blockchain\\\\Fake Product Identification Using Blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport GetContract from './components/GetContract';\n\n// ABIs\nimport CentralABI from './abis/Cental_ABI.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [central, setCentral] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      try {\n        if (window.ethereum) {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = await provider.getSigner();\n          setProvider(provider);\n          const network = await provider.getNetwork();\n          const centralContractAddress = config[network.chainId].central.address;\n          const centralInstance = new ethers.Contract(centralContractAddress, CentralABI, signer);\n          setCentral(centralInstance);\n          const accounts = await provider.listAccounts();\n          setAccount(accounts[0]);\n          setLoading(false);\n        } else {\n          throw new Error('MetaMask not found. Please install MetaMask.');\n        }\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    };\n    loadBlockchainData();\n\n    // Listen for provider changes (account changes, network changes)\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', loadBlockchainData);\n      window.ethereum.on('chainChanged', loadBlockchainData);\n    }\n\n    // Cleanup the event listeners when the component unmounts\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners('accountsChanged', loadBlockchainData);\n        window.ethereum.removeAllListeners('chainChanged', loadBlockchainData);\n      }\n    };\n  }, []);\n  if (loading || !central) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/getcontract\",\n          element: /*#__PURE__*/_jsxDEV(GetContract, {\n            account: account,\n            central: central\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eVSRJ4Dm2DKXyzpirRYcfdJk2l0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","BrowserRouter","Router","Route","Routes","GetContract","CentralABI","config","App","provider","setProvider","central","setCentral","account","setAccount","loading","setLoading","loadBlockchainData","window","ethereum","request","method","providers","Web3Provider","signer","getSigner","network","getNetwork","centralContractAddress","chainId","address","centralInstance","Contract","accounts","listAccounts","Error","error","console","on","removeAllListeners"],"sources":["C:/Users/91831/Fake-Product-Identification-Using-Blockchain/Fake Product Identification Using Blockchain/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport GetContract from './components/GetContract';\r\n\r\n// ABIs\r\nimport CentralABI from './abis/Cental_ABI.json';\r\n\r\n// Config\r\nimport config from './config.json';\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [central, setCentral] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadBlockchainData = async () => {\r\n      try {\r\n        if (window.ethereum) {\r\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = await provider.getSigner();\r\n          setProvider(provider);\r\n\r\n          const network = await provider.getNetwork();\r\n          const centralContractAddress = config[network.chainId].central.address;\r\n          const centralInstance = new ethers.Contract(centralContractAddress, CentralABI, signer);\r\n          setCentral(centralInstance);\r\n\r\n          const accounts = await provider.listAccounts();\r\n          setAccount(accounts[0]);\r\n\r\n          setLoading(false);\r\n        } else {\r\n          throw new Error('MetaMask not found. Please install MetaMask.');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadBlockchainData();\r\n\r\n    // Listen for provider changes (account changes, network changes)\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', loadBlockchainData);\r\n      window.ethereum.on('chainChanged', loadBlockchainData);\r\n    }\r\n\r\n    // Cleanup the event listeners when the component unmounts\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeAllListeners('accountsChanged', loadBlockchainData);\r\n        window.ethereum.removeAllListeners('chainChanged', loadBlockchainData);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  if (loading || !central) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Routes>\r\n          <Route path=\"/getcontract\" element={<GetContract account={account} central={central} />} />\r\n        </Routes>\r\n      </>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}